/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'groovyx.android'

description = 'Sample project showing how to use Goovy on Android - http://www.groovy-lang.org'

android {
  compileSdkVersion 26
  buildToolsVersion rootProject.buildToolsVersion

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion rootProject.compileSdkVersion

    versionCode 1
    versionName '1.0.0'

    signingConfig signingConfigs.debug

    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  signingConfigs {
    debug {
      storeFile rootProject.file('debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.dev'
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  lintOptions {
    disable 'InvalidPackage' // lint sees references in the grooid jar to unavailable java classes
  }
}

dependencies {
  implementation "org.codehaus.groovy:groovy:$groovyVersion:grooid"
  implementation 'com.arasthel:swissknife:1.4.0'

  androidTestImplementation "com.android.support.test:runner:$androidSupportTestVersion"
  androidTestImplementation "com.android.support.test:rules:$androidSupportTestVersion"

  testImplementation "org.spockframework:spock-core:$spockVersion"
}

configurations.all {
  resolutionStrategy.force 'com.android.support:support-annotations:26.1.0'
}

android.applicationVariants.all { variant ->
  // The default 'assemble' task only applies to normal variants. Add test variants as well.
  tasks.getByName('assemble').dependsOn variant.assemble
}
